############################################
#                                          #
#      DATA DEFINITION LANGUAGE	Queries	   #
#                                          #
############################################


1)
CREATE TABLE hall_data(
	hall_code VARCHAR(3) PRIMARY KEY,
	hall_name VARCHAR(100),
	description TEXT,
	image_path VARCHAR(20),
	no_of_boarders INT
);

2)
CREATE TABLE student_data(
	roll_no VARCHAR(10) PRIMARY KEY,
	name VARCHAR(30),
	branch_code VARCHAR(2),
	date_of_birth DATE,
	email_id VARCHAR(100),
	hall_code VARCHAR(3)
	FOREIGN KEY(hall_code) REFERENCES hall_data(hall_code) ON DELETE CASCADE
);

3)
CREATE TABLE hall_authorities(
	employee_id VARCHAR(10) PRIMARY KEY,
	name VARCHAR(30),
	position VARCHAR(20),
	date_of_appointment DATE,
	email_id VARCHAR(100),
	hall_code VARCHAR(3),
	FOREIGN KEY(hall_code) REFERENCES hall_data(hall_code) ON DELETE CASCADE
);

4)
CREATE TABLE hall_council(
	roll_no VARCHAR(10) PRIMARY KEY,
	portfolio VARCHAR(20),
	hall_code VARCHAR(3),
	FOREIGN KEY(roll_no) REFERENCES student_data(roll_no) ON DELETE CASCADE,
	FOREIGN KEY(hall_code) REFERENCES hall_data(hall_code) ON DELETE CASCADE
);


5)
CREATE TABLE hall_news(
	sr_no INT PRIMARY KEY AUTO_INCREMENT,
	hall_code VARCHAR(3),
	date DATE,
	title VARCHAR(100),
	content TEXT,
	issuing_auth VARCHAR(30),
	FOREIGN KEY(hall_code) REFERENCES hall_data(hall_code) ON DELETE CASCADE
);

6)
CREATE TABLE login_credentials(
	login_id VARCHAR(10),
	login_category VARCHAR(20),
	login_password VARCHAR(255),
	PRIMARY KEY(login_id)
);

7)
CREATE TABLE contact_details(
	login_id VARCHAR(10),
	phone_number VARCHAR(20),
	PRIMARY KEY(login_id,phone_number),
	FOREIGN KEY(login_id) REFERENCES login_credentials(login_id) ON DELETE CASCADE
);

8)
CREATE TABLE complaints(
	complaint_no INT PRIMARY KEY AUTO_INCREMENT,
	category VARCHAR(20),
	complaint_title VARCHAR(100),
	content TEXT,
	date DATE,
	roll_no VARCHAR(10),
	hall_code VARCHAR(3),
	no_of_upvotes INT DEFAULT 0,
	FOREIGN KEY(roll_no) REFERENCES student_data(roll_no) ON DELETE CASCADE,
	FOREIGN KEY(hall_code) REFERENCES hall_data(hall_code) ON DELETE CASCADE
);

9)
CREATE TABLE upvotes(
	complaint_no INT,
	login_id VARCHAR(10),
	PRIMARY KEY(complaint_no,login_id),
	FOREIGN KEY(complaint_no) REFERENCES complaints(complaint_no) ON DELETE CASCADE,
	FOREIGN KEY(login_id) REFERENCES student_data(roll_no) ON DELETE CASCADE
);

10)
CREATE TABLE general_news(
	sr_no INT PRIMARY KEY AUTO_INCREMENT,
	title VARCHAR(100),
	content TEXT,
	date DATE
);


#######################################################
#								                                      #
#	                       TRIGGERS                     #
#                                                     #
#######################################################

1)
CREATE OR REPLACE TRIGGER increment_votes AFTER INSERT ON upvotes
FOR EACH ROW
UPDATE complaints
SET no_of_upvotes=no_of_upvotes+1
WHERE NEW.complaint_no=complaints.complaint_no;

2)
CREATE OR REPLACE TRIGGER decrement_votes AFTER DELETE ON upvotes
FOR EACH ROW
UPDATE complaints
SET no_of_upvotes=no_of_upvotes-1
WHERE OLD.complaint_no=complaints.complaint_no;

3)
CREATE OR REPLACE TRIGGER promote_to_council AFTER INSERT ON hall_council
FOR EACH ROW
UPDATE login_credentials
SET login_category='Hall Council Member'
WHERE NEW.roll_no=login_credentials.login_id;

4)
CREATE OR REPLACE TRIGGER demote_from_council AFTER DELETE ON hall_council
FOR EACH ROW
UPDATE login_credentials
SET login_category='Boarder'
WHERE OLD.roll_no=login_credentials.login_id;

5)
CREATE OR REPLACE TRIGGER increment_boarders AFTER INSERT ON student_data
FOR EACH ROW
UPDATE hall_data
SET no_of_boarders=no_of_boarders+1
WHERE NEW.hall_code=hall_data.hall_code;

6)
CREATE OR REPLACE TRIGGER decrement_boarders AFTER DELETE ON student_data
FOR EACH ROW
UPDATE hall_data
SET no_of_boarders=no_of_boarders-1
WHERE OLD.hall_code=hall_data.hall_code;
